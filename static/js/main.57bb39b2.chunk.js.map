{"version":3,"sources":["history.js","apis/items.js","components/Item.js","actions/index.js","actions/type.js","components/ItemsList.js","components/Header.js","components/App.js","reducers/index.js","reducers/itemsReducer.js","reducers/flagreducer.js","index.js"],"names":["createBrowserHistory","axios","create","baseURL","Item","onClickItem","a","editedItem","props","item","isDone","editItem","onClickDelete","event","stopPropagation","deleteItem","_id","status","this","Fragment","className","onClick","content","React","Component","connect","dispatch","items","put","type","payload","itemId","delete","ItemsList","renderItems","map","color","onSubmit","formValues","console","log","body","name1","userId","postItem","clearAddFlag","renderForm","flagAdd","handleSubmit","Field","name","component","renderInput","onClickAddButton","setAddFlag","onSubmitButton","input","reduxForm","form","state","Object","values","post","response","data","Header","App","fetchItems","history","path","exact","get","combineReducers","auth","action","_","mapKeys","omit","formReducer","plugin","newItems","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.57bb39b2.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import axios from 'axios';\r\n\r\nconst urlExpress = 'http://localhost:8000';\r\n\r\nexport default axios.create({\r\n    baseURL: urlExpress\r\n});","import '../style/item.css'\r\nimport React from 'react';\r\nimport { editItem, deleteItem } from '../actions/index';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Item extends React.Component {\r\n    onClickItem = async () => {\r\n        const editedItem = { ...this.props.item, isDone: !this.props.item.isDone };\r\n        await this.props.editItem(editedItem);\r\n    }\r\n\r\n    onClickDelete = async (event) => {\r\n        event.stopPropagation();\r\n        await this.props.deleteItem(this.props.item._id);\r\n    }\r\n\r\n    render() {\r\n        let status = this.props.item.isDone ? 'done' : 'pending';\r\n        return (\r\n            <React.Fragment>\r\n                <li className={`item ${status}`} onClick={this.onClickItem}>\r\n                    {this.props.item.content}\r\n                    <div onClick={this.onClickDelete} className=\"button-delete\">\r\n                        <i className=\"icon-cancel-circled\" />\r\n                    </div>\r\n                </li>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n};\r\n\r\nexport default connect(null, { editItem, deleteItem })(Item);","import { LOAD_ITEMS, SET_ADD_FLAG, CLEAR_ADD_FLAG, POST_ITEM, DELETE_ITEM, EDIT_TASK } from './type';\r\nimport items from '../apis/items';\r\n\r\nexport const fetchItems = (userId) => async (dispatch) => {\r\n    const response = await items.get(`/items/${userId}`);\r\n    console.log(response);\r\n    dispatch({\r\n        type: LOAD_ITEMS,\r\n        payload: response.data\r\n    });\r\n};\r\n\r\nexport const postItem = (item) => async (dispatch) => {\r\n    const response = await items.post('/items', item);\r\n    console.log('Payload: ')\r\n    console.log(response);\r\n    dispatch({\r\n        type: POST_ITEM,\r\n        payload: response.data\r\n    });\r\n};\r\n\r\nexport const deleteItem = (itemId) => async (dispatch) => {\r\n    const response = await items.delete(`/items/${itemId}`);\r\n\r\n    dispatch({\r\n        type: DELETE_ITEM,\r\n        payload: itemId\r\n    });\r\n};\r\n\r\nexport const setAddFlag = () => {\r\n    return {\r\n        type: SET_ADD_FLAG\r\n    };\r\n};\r\n\r\nexport const editItem = (item) => async (dispatch) => {\r\n    const response = await items.put(`items/${item._id}`, item);\r\n\r\n    dispatch({\r\n        type: EDIT_TASK,\r\n        payload: item\r\n    });\r\n};\r\n\r\nexport const clearAddFlag = () => {\r\n    return {\r\n        type: CLEAR_ADD_FLAG\r\n    };\r\n};","export const LOAD_ITEMS = 'LOAD_ITEMS';\r\nexport const SET_ADD_FLAG = 'SET_ADD_FLAG';\r\nexport const CLEAR_ADD_FLAG = 'CLEAR_ADD_FLAG';\r\nexport const POST_ITEM = 'POST_ITEM';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const EDIT_TASK = 'EDIT_TASK';","import '../style/itemList.css';\r\nimport '../fontello/css/fontello.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { setAddFlag, clearAddFlag, postItem } from '../actions/index';\r\nimport Item from './Item';\r\n\r\nclass ItemsList extends React.Component {\r\n    renderItems = () => {\r\n        if(this.props.items) {\r\n            return this.props.items.map( item => {\r\n                let color = item.isDone ? 'done' : '';\r\n                return (\r\n                    <Item className={`${color}`} item={item} />\r\n                );\r\n            });\r\n        }\r\n    };\r\n\r\n    onSubmit = async (formValues) => {\r\n        console.log(formValues);\r\n        console.log('hello from onSubmit');\r\n        const body = {\r\n            content: formValues.name1,\r\n            isDone: false,\r\n            userId: 1\r\n        };\r\n\r\n        await this.props.postItem(body);\r\n        this.props.clearAddFlag();\r\n    };\r\n\r\n    renderInput({ input }) {\r\n        return (\r\n            <div>\r\n                <input className=\"form__field\" {...input} />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderForm = () => {\r\n        if(this.props.flagAdd.flagAdd) {\r\n            return (\r\n                <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                    <Field name='name1' component={this.renderInput} />\r\n                    <button className=\"button-submit\">Dodaj</button>\r\n                </form>\r\n            );\r\n        };\r\n\r\n\r\n    };\r\n\r\n    onClickAddButton = () => {\r\n        this.props.setAddFlag();\r\n    };\r\n\r\n    onSubmitButton = () => {\r\n        this.props.clearAddFlag();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ol className='list'>\r\n                    {this.renderItems()}\r\n                    {this.renderForm()}\r\n                </ol>\r\n                <div>\r\n                    <div onClick={this.onClickAddButton}>\r\n                        <i className=\"icon-plus-circle add-button\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        items: Object.values(state.items),\r\n        flagAdd: state.flagAdd\r\n    };\r\n};\r\n\r\nexport default reduxForm({\r\n    form: 'newItems'\r\n})(connect(mapStateToProps, { setAddFlag, clearAddFlag, postItem })(ItemsList));\r\n","import \"../style/header.css\";\r\nimport React from 'react';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                Lista zakupów\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Router, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport history from '../history';\r\nimport ItemsList from './ItemsList';\r\nimport { fetchItems } from '../actions';\r\nimport Header from './Header';\r\nimport \"../fontello/css/fontello.css\";\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchItems(1);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Router history={history}>\r\n                    <div>\r\n                        <Route path=\"/\" exact component={ItemsList} />\r\n                    </div>\r\n                </Router>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default connect(null, { fetchItems })(App);","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport itemsReducer from './itemsReducer';\r\nimport flagreducer from './flagreducer';\r\nimport { POST_ITEM } from '../actions/type';\r\n\r\nexport default combineReducers({\r\n    auth: {},\r\n    items: itemsReducer,\r\n    flagAdd: flagreducer,\r\n    form: formReducer.plugin({\r\n        newItems: (state, action) => { // <------ 'account' is name of form given to reduxForm()\r\n          switch(action.type) {\r\n            case POST_ITEM:\r\n              return undefined;       // <--- blow away form data\r\n            default:\r\n              return state;\r\n          }\r\n        }\r\n      })\r\n});","import { LOAD_ITEMS, POST_ITEM, DELETE_ITEM, EDIT_TASK } from \"../actions/type\";\r\nimport _ from 'lodash';\r\n\r\nexport default (state={}, action) => {\r\n    console.log(action.payload);\r\n    switch (action.type) {\r\n        case LOAD_ITEMS:\r\n            return { ...state, ..._.mapKeys(action.payload, '_id') };\r\n        case POST_ITEM:\r\n            return { ...state, [action.payload._id]: action.payload };\r\n        case DELETE_ITEM:\r\n            return _.omit(state, action.payload);\r\n        case EDIT_TASK:\r\n            return { ...state, [action.payload._id]: action.payload };\r\n        default:\r\n            return state;\r\n    };\r\n};","import { SET_ADD_FLAG, CLEAR_ADD_FLAG } from \"../actions/type\";\r\n\r\nexport default (state={}, action) => {\r\n    switch (action.type) {\r\n        case SET_ADD_FLAG:\r\n            return { ...state, flagAdd: true }\r\n        case CLEAR_ADD_FLAG:\r\n            return { ...state, flagAdd: false }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(reduxThunk))    \r\n);\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store} >\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}